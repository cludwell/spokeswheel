// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id             Int        @id @default(autoincrement())
  firstName      String     @db.VarChar(255)
  lastName       String     @db.VarChar(255)
  email          String     @unique @db.VarChar(255)
  hashedPassword String     @db.VarChar(255)
  dateOfBirth    DateTime   @db.Timestamptz()
  createdAt      DateTime   @default(now()) @db.Timestamptz()
  updatedAt      DateTime   @default(now()) @db.Timestamptz()
  bookings       Bookings[]

  @@map("users")
}

model Bookings {
  id                   Int         @id @default(autoincrement())
  userId               Int         @map("userId")
  conferenceId         Int         @map("conferenceId")
  photoConsent         Boolean?
  paid                 Boolean?
  emergencyName        String      @db.VarChar(255)
  emergencyNumber      String      @db.VarChar(255)
  emergencyRelation    String      @db.VarChar(255)
  emailList            Boolean?
  textUpdates          Boolean?
  dietaryRestrictions  String?     @db.VarChar(255)
  allergies            String?     @db.Text
  notes                String?     @db.Text
  specialAccomodations String?     @db.Text
  lodging              String      @db.VarChar(255)
  user                 Users?      @relation(fields: [userId], references: [id])
  conference           Conferences @relation(fields: [conferenceId], references: [id])
  createdAt            DateTime    @default(now()) @db.Timestamptz()
  updatedAt            DateTime    @default(now()) @db.Timestamptz()

  @@map("bookings")
}

model Conferences {
  id                 Int        @id @default(autoincrement())
  date               DateTime
  registrationCutoff DateTime
  locationName       String     @db.VarChar(255)
  locationLat        Float
  locationLong       Float
  createdAt          DateTime   @default(now()) @db.Timestamptz()
  updatedAt          DateTime   @default(now()) @db.Timestamptz()
  bookings           Bookings[]

  @@map("conferences")
}
